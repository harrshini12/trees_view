{"ast":null,"code":"var _jsxFileName = \"/Users/harrshinib/Desktop/Ecosia/tree-view/src/components/TreeList/TreeList.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport TreeItem from '../TreeItem/TreeItem';\nimport useTreeDataFetching from '../../hooks/useTreeDataFetching';\nimport './TreeList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TreeList = ({\n  url\n}) => {\n  _s();\n  const {\n    data,\n    error\n  } = useTreeDataFetching(url);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"tree-list-container\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"tree-list\",\n      children: data.map(tree => /*#__PURE__*/_jsxDEV(TreeItem, {\n        tree: tree,\n        \"aria-label\": `Tree ${tree.name}`\n      }, tree.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(TreeList, \"ntixqcRDkCxOYk7ohkjtAo8pkC0=\", false, function () {\n  return [useTreeDataFetching];\n});\n_c = TreeList;\nexport default TreeList;\nvar _c;\n$RefreshReg$(_c, \"TreeList\");","map":{"version":3,"names":["React","TreeItem","useTreeDataFetching","jsxDEV","_jsxDEV","TreeList","url","_s","data","error","children","message","fileName","_jsxFileName","lineNumber","columnNumber","className","map","tree","name","id","_c","$RefreshReg$"],"sources":["/Users/harrshinib/Desktop/Ecosia/tree-view/src/components/TreeList/TreeList.tsx"],"sourcesContent":["import React from 'react'\nimport TreeItem from '../TreeItem/TreeItem'\nimport useTreeDataFetching from '../../hooks/useTreeDataFetching'\nimport './TreeList.css'\n\ninterface TreeListProps {\n  url: string\n}\n\nconst TreeList: React.FC<TreeListProps> = ({ url }) => {\n  const { data, error } = useTreeDataFetching(url)\n\n  if (error) {\n    return <p>Error: {error.message}</p>\n  }\n\n  return (\n    <section className='tree-list-container'>\n  <ul className='tree-list'>\n    {data.map((tree) => (\n      <TreeItem key={tree.id} tree={tree} aria-label={`Tree ${tree.name}`}/>\n    ))}\n  </ul>\n</section>\n\n  )\n}\n\nexport default TreeList\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,OAAOC,mBAAmB,MAAM,iCAAiC;AACjE,OAAO,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAMvB,MAAMC,QAAiC,GAAGA,CAAC;EAAEC;AAAI,CAAC,KAAK;EAAAC,EAAA;EACrD,MAAM;IAAEC,IAAI;IAAEC;EAAM,CAAC,GAAGP,mBAAmB,CAACI,GAAG,CAAC;EAEhD,IAAIG,KAAK,EAAE;IACT,oBAAOL,OAAA;MAAAM,QAAA,GAAG,SAAO,EAACD,KAAK,CAACE,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EACtC;EAEA,oBACEX,OAAA;IAASY,SAAS,EAAC,qBAAqB;IAAAN,QAAA,eAC1CN,OAAA;MAAIY,SAAS,EAAC,WAAW;MAAAN,QAAA,EACtBF,IAAI,CAACS,GAAG,CAAEC,IAAI,iBACbd,OAAA,CAACH,QAAQ;QAAeiB,IAAI,EAAEA,IAAK;QAAC,cAAa,QAAOA,IAAI,CAACC,IAAK;MAAE,GAArDD,IAAI,CAACE,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA+C,CACtE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAGV,CAAC;AAAAR,EAAA,CAjBKF,QAAiC;EAAA,QACbH,mBAAmB;AAAA;AAAAmB,EAAA,GADvChB,QAAiC;AAmBvC,eAAeA,QAAQ;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}